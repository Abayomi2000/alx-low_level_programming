#ifndef _3_CALC_H_
#define _3_CALC_H_
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

/**
 * struct op - Struct op
 *
 * @op: The operator
 * @f: The function associated
 */
typedef struct op
{
	char *op;
	int (*f)(int a, int b);
} op_t;

int op_add(int a, int b);
int op_sub(int a, int b);
int op_mul(int a, int b);
int op_div(int a, int b);
int op_mod(int a, int b);

int (*get_op_func(char *s))(int, int);
#endif

#include <stdlib.h>
#include <stdio.h>
#include "3-calc.h"

/**
 * get_op_func - function pointer
 * @s: char type string
 *
 * Description: struction with operators
 * Return: pointer to operator and function
 */
int (*get_op_func(char *s))(int, int)
{
	op_t ops[] = {
		{"+", op_add},
		{"-", op_sub},
		{"*", op_mul},
		{"/", op_div},
		{"%", op_mod},
		{NULL, NULL}
	};
	int i = 0;

	while (ops[i].op)
	{
		if (*s == *ops[i].op)
		{
			return (ops[i].f);
		}
		i++;
	}
	printf("Error\n");
	exit(99);
}

#include "3-calc.h"

int (*get_op_func(char *s))(int, int)
{
	int i = 0;

	op_t ops[] = {
		{"+", op_add},
		{"-", op_sub},
		{"*", op_mul},
		{"/", op_div},
		{"%", op_mod},
		{NULL, NULL}
	};

	while (ops[i].op != NULL)
	{
		if (s == ops[i].op)
			return(ops[i].f);
		i++;
	}

}#include <stdlib.h>
#include <stdio.h>
#include "3-calc.h"

/**
 * op_add - function with two arguments
 * @a: int type
 * @b: int type
 *
 * Description: add two input
 * Return: value
 */
int op_add(int a, int b)
{
	return (a + b);
}

/**
 * op_sub - function with two arguments
 * @a: int type
 * @b: int type
 *
 * Description: subtract two input
 * Return: value
 */
int op_sub(int a, int b)
{
	return (a - b);
}

/**
 * op_mul - function with two arguments
 * @a: int type
 * @b: int type
 *
 * Description: multiply two input
 * Return: value
 */
int op_mul(int a, int b)
{
	return (a * b);
}

/**
 * op_div - function with two arguments
 * @a: int type
 * @b: int type
 *
 * Description: divide two input
 * Return: value
 */
int op_div(int a, int b)
{
	if (b == 0)
	{
		printf("Error\n");
		exit(100);
	}
	return (a / b);
}

/**
 * op_mod - function with two arguments
 * @a: int type
 * @b: int type
 *
 * Description: mod two input
 * Return: value
 */
int op_mod(int a, int b)
{
	if (b == 0)
	{
		printf("Error\n");
		exit(100);
	}
	return (a % b);
}
